<div class="container">
    <div class="row mb-3">
        <div class="col">
            <h3>Список товаров</h3>
        </div>
        <div class="col d-flex justify-content-end">
            <button type="button" class="btn btn-outline-success btn-sm" onclick="createProduct()">+ Добавить</button>
        </div>
    </div>
    <table id="productsTable" class="table align-middle">
        <thead class="table-dark">
            <tr>
                <th scope="col" class="text-left" style="width: 75px;"></th>
                <th scope="col">Название</th>
                <th scope="col">Описание</th>
                <th scope="col">Бренд</th>
                <th scope="col">Категория</th>
                <th scope="col">Цена</th>
                <th scope="col" class="text-right" style="width: 50px;"></th>
                <th scope="col" class="text-right" style="width: 50px;"></th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

@* <style>
    .table img {
        max-width: 100%; /* Максимальная ширина изображения */
        max-height: 100%; /* Максимальная высота изображения */
    }
</style> *@



<script>
    $(document).ready(function () {
        loadTableData();

    });
    // Функция для загрузки данных для таблицы
    function loadTableData() {
        $.ajax({
            url: '/Product/GetAllProducts',
            type: 'GET',
            success: function (data) {
                
                fillTable(data.data);
            },
            error: function (xhr) {
                if (xhr.responseJSON && xhr.responseJSON.errorMessage) {
                    console.error("Ошибка при получении данных:", xhr.responseJSON.errorMessage);
                    console.error("Код ошибки:", xhr.responseJSON.errorCode);
                    alert("Произошла ошибка при загрузке данных." + xhr.responseJSON.errorMessage);
                } else {
                    console.error("Произошла ошибка при загрузке данных.");
                   // alert("Произошла ошибка при загрузке данных.");
                }
            }
        });
    }

    //<tr><td>1</td><td>Adidas</td><td><img src="img\edit_24dp.svg" alt="Edit" onclick="editBrand(72, 'Adidas')"></td><td><img src="img\delete_24dp.svg" alt="Delete" onclick="deleteBrandConfirmation(72, 'Adidas')"></td></tr>
    // Функция для заполнения таблицы
    function fillTable(data) {
        $('#productsTable tbody').empty();

        $.each(data, function (index, item) {
            // Извлечение расширения файла из fileName
            var extension = item.images[0].fileName.split('.').pop().toLowerCase();
            var imgSrc;
            
            if (extension === 'jpg' || extension === 'jpeg') 
            {
                imgSrc = 'data:image/jpeg;base64,' + item.images[0].data;
            } 
            else if (extension === 'png') 
            {
                imgSrc = 'data:image/png;base64,' + item.images[0].data;
            } 

            var row = '<tr><td><img src="' + imgSrc + '" alt="imgIcon" onclick=""></td><td>' + item.name + '</td>' +
                '<td>' + item.description + '</td><td>' + item.brand.name + '</td><td>' + item.category.name + '</td><td>' + item.price
                + '</td>' + '<td><img src="img\\edit_24dp.svg" alt="Edit" onclick=""></td>' +
                '<td><img src="img\\delete_24dp.svg" alt="Delete" onclick="deleteProductConfirmation(' + item.id + ', \'' + item.name + '\')"></td></tr>';

            $('#productsTable tbody').append(row);
        });
    }



    //Функция удаление элемента с таблицы
    function deleteProduct(id) {
        $.ajax({
            url: "/Product/Delete",
            type: "DELETE",
            data: { id: id },
            success: function (data) {
                console.log("Продукт успешно удален:", data);
                loadTableData();
                showSuccessNotification("Продукт '" + data + "' успешно удален");
            },
            error: function (xhr) {
                // Произошла ошибка удаления
                console.error("Ошибка при удалении бренда:", xhr.responseJSON.errorMessage);
                // Ваша логика обработки ошибки, например, вывод сообщения об ошибке пользователю
                alert("Ошибка при удалении бренда: " + xhr.responseJSON.errorMessage);
            }
        });
    }
    // Определение функции обработчика события для удаления бренда
    function deleteProductConfirmation(id, productName) {
        showDeleteConfirmationModal(id, productName, deleteProduct);
    }

    function createProduct() {
        resetModal();
        var modal = document.getElementById('exampleModal');
        var modalTitle = document.querySelector('#exampleModal .modal-title');
        var modalBody = document.querySelector('#exampleModal .modal-body');

        modalTitle.textContent = 'Добавление нового товара';

        // Загрузка HTML-шаблона формы через AJAX
        $.get('/Product/AddProduct', function (template) {
            // Добавление полученного HTML в модальное окно
            modalBody.innerHTML = template;

            // Скрытие кнопки "Добавить товар"
            var existingSubmitButton = modalBody.querySelector('button[type="submit"]');
            existingSubmitButton.style.display = 'none';

            // Нахождение формы на загруженной странице
            var form = modalBody.querySelector('#productForm');

            // Поиск стилей и скриптов в загруженной форме
            var styles = $(template).filter('style').add($(template).find('style')).toArray();
            var scripts = $(template).filter('script').add($(template).find('script')).toArray();

            // Добавление стилей в текущий документ
            styles.forEach(function (style) {
                document.head.appendChild(style);
            });

            // Добавление скриптов в текущий документ
            scripts.forEach(function (script) {
                var newScript = document.createElement('script');
                if (script.src) {
                    newScript.src = script.src;
                } else {
                    newScript.textContent = script.textContent;
                }
                document.body.appendChild(newScript);
            });

            var cancelButton = document.createElement('button');
            cancelButton.setAttribute('type', 'button');
            cancelButton.setAttribute('class', 'btn btn-secondary');
            cancelButton.setAttribute('data-bs-dismiss', 'modal');
            cancelButton.textContent = 'Отмена';

            var createButton = document.createElement('button');
            createButton.setAttribute('type', 'button');
            createButton.setAttribute('class', 'btn btn-success');
            createButton.setAttribute('id', 'createProductFormButton');
            createButton.textContent = 'Добавить';

            var modalFooter = document.querySelector('#exampleModal .modal-footer');
            modalFooter.appendChild(cancelButton);
            modalFooter.appendChild(createButton);

            var modalDialog = modal.querySelector('.modal-dialog');
            modalDialog.classList.add('modal-lg');
            modalDialog.classList.add('modal-dialog-centered');

            var modalInstance = new bootstrap.Modal(modal, { backdrop: 'static' });
            modalInstance.show();

            setTimeout(function () {
                nameInput.focus();
            }, 100);

            var nameInput = document.getElementById('Name');

            // Назначение обработчика события на новую кнопку
            createButton.addEventListener('click', function () {
                // Проверяем валидность формы
                if (form.checkValidity()) 
                {
                    // Находим кнопку "Добавить товар" в загруженной форме
                    var submitButton = form.querySelector('button[type="submit"]');
                    if (submitButton) 
                    {
                        // Вызываем обработчик клика кнопки "Добавить товар"
                        submitButton.click();
                        modalInstance.hide();
                        modalInstance._element.addEventListener('hidden.bs.modal', function () {
                            setTimeout(function () {
                                loadTableData();
                            }, 500);
                        });
                    } 
                    else 
                    {
                        console.error('Кнопка "Добавить товар" не найдена');
                    }
                } 
                else 
                {
                    form.reportValidity();
                }
            });

            // Устанавливаем обработчик формы после ее загрузки
            // form.addEventListener('submit', function (event) {
            //     event.preventDefault();
            //     // Ваша логика обработки отправки формы здесь
            //     console.log('Форма отправлена');
            // });

        });
    }




    






</script>